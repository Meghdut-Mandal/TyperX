/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.AWTException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author KIIT
 */
@SuppressWarnings("ALL")
public class TyperXFrame extends javax.swing.JFrame {

    public static String version = "0.37";
    public static String tag = "#Ludo";
    public TyperXWorker worker;

    /**
     * Creates new form TyperXFrame
     *
     * @throws AWTException
     */
    public TyperXFrame() throws AWTException {
        worker = new TyperXWorker(this);
        initComponents();
        this.startUI();
    }

    public void startUI() {
        this.startTyping.setVisible(true);
        this.stopTyping.setVisible(false);
        this.version_lable.setText(version+" "+tag);
        this.lableInfo.setText("Ready for transfer");
        this.progress.setValue(0);
    }

    public void stopUI() {
        this.startTyping.setVisible(false);
        this.stopTyping.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        startTyping = new javax.swing.JButton();
        stopTyping = new javax.swing.JButton();
        version_lable = new javax.swing.JLabel();
        lableInfo = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        startTimerCombobox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        strokeTimerComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        keystroke_lable = new javax.swing.JLabel();
        progress = new javax.swing.JProgressBar();
        lineWrapCheckBox = new javax.swing.JCheckBox();
        jSeparator3 = new javax.swing.JSeparator();
        human_mode = new javax.swing.JCheckBox();
        about_button = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TyperX");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        textArea.setColumns(20);
        textArea.setFont(new java.awt.Font("Leelawadee UI", 0, 13)); // NOI18N
        textArea.setLineWrap(true);
        textArea.setRows(5);
        textArea.setWrapStyleWord(true);
        textArea.setPreferredSize(null);
        jScrollPane1.setViewportView(textArea);

        startTyping.setText("Start Typing");
        startTyping.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startTypingActionPerformed(evt);
            }
        });

        stopTyping.setText("Stop Typing");
        stopTyping.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopTypingActionPerformed(evt);
            }
        });

        version_lable.setText("v0.X #XXXXXXi");

        lableInfo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lableInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lableInfo.setText("To kaisa hai app log ?");

        jLabel2.setText("Timer duration (in Seconds)");

        startTimerCombobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2", "3", "4", "5", "6", "7", "8", " " }));
        startTimerCombobox.setSelectedIndex(3);
        startTimerCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startTimerComboboxActionPerformed(evt);
            }
        });
        startTimerCombobox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                startTimerComboboxPropertyChange(evt);
            }
        });

        jLabel3.setText("Key Stroke responce Time");

        strokeTimerComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2", "8", "10", "12", "50", "90", "100", "120", "150" }));
        strokeTimerComboBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                strokeTimerComboBoxPropertyChange(evt);
            }
        });

        jLabel4.setText("Countdown before Typing");

        keystroke_lable.setText("Controls Typing Speed");

        lineWrapCheckBox.setSelected(true);
        lineWrapCheckBox.setText("Word Wrap");
        lineWrapCheckBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lineWrapCheckBoxPropertyChange(evt);
            }
        });

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        human_mode.setText("Human Mode");
        human_mode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                human_modeActionPerformed(evt);
            }
        });
        human_mode.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                human_modePropertyChange(evt);
            }
        });

        about_button.setFont(new java.awt.Font("Leelawadee UI", 0, 18)); // NOI18N
        about_button.setText("Help");
        about_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                about_buttonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        jLabel1.setText("Welcome To TyperX ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(startTyping)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stopTyping)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(version_lable))
                            .addComponent(lableInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(strokeTimerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(keystroke_lable))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(startTimerCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lineWrapCheckBox)
                            .addComponent(human_mode))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(about_button))
                    .addComponent(jSeparator1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(startTyping)
                            .addComponent(stopTyping)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lableInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(version_lable)
                            .addComponent(progress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(startTimerCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(strokeTimerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(keystroke_lable)))
                    .addComponent(about_button)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lineWrapCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(human_mode)))
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startTypingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startTypingActionPerformed
        String text = this.textArea.getText();
        this.worker.startRequest(text);

    }//GEN-LAST:event_startTypingActionPerformed

    private void stopTypingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopTypingActionPerformed
        this.worker.stopRequest();

    }//GEN-LAST:event_stopTypingActionPerformed


    private void lineWrapCheckBoxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lineWrapCheckBoxPropertyChange

        this.textArea.setLineWrap(this.lineWrapCheckBox.isSelected());

    }//GEN-LAST:event_lineWrapCheckBoxPropertyChange

    private void startTimerComboboxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_startTimerComboboxPropertyChange
        int value = Integer.parseInt(this.startTimerCombobox.getSelectedItem().toString());
        worker.setStartTime(value);

    }//GEN-LAST:event_startTimerComboboxPropertyChange

    private void strokeTimerComboBoxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_strokeTimerComboBoxPropertyChange

        int value = Integer.parseInt(strokeTimerComboBox.getSelectedItem().toString());
        worker.setKeyStrokeDelay(value);

    }//GEN-LAST:event_strokeTimerComboBoxPropertyChange

    private void startTimerComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startTimerComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startTimerComboboxActionPerformed

    private void human_modeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_human_modeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_human_modeActionPerformed

    private void about_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_about_buttonActionPerformed

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ContributorsFrame frome = new ContributorsFrame();
                frome.setVisible(true);
            }
        });


    }//GEN-LAST:event_about_buttonActionPerformed

    private void human_modePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_human_modePropertyChange
        if (human_mode.isSelected()){
            strokeTimerComboBox.setSelectedIndex(5);
            setSpeedControlEnabled(false);
        }else {
            strokeTimerComboBox.setSelectedIndex(0);
            setSpeedControlEnabled(true);
        }

    }//GEN-LAST:event_human_modePropertyChange

    private void setSpeedControlEnabled(boolean isEnabled){
        if(isEnabled){
            keystroke_lable.setText("Controls Typing speed.");

        }else{
            keystroke_lable.setText("Turn off HUMAN MODE to acess speed control");
        }
        strokeTimerComboBox.setEnabled(isEnabled);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            Logger.getLogger(TyperXFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                TyperXFrame frame = new TyperXFrame();
//                frame.setAlwaysOnTop(true);
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);

            } catch (AWTException ex) {
                Logger.getLogger(TyperXFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton about_button;
    public javax.swing.JCheckBox human_mode;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JSeparator jSeparator1;
    public javax.swing.JSeparator jSeparator2;
    public javax.swing.JSeparator jSeparator3;
    public javax.swing.JLabel keystroke_lable;
    public javax.swing.JLabel lableInfo;
    public javax.swing.JCheckBox lineWrapCheckBox;
    public javax.swing.JProgressBar progress;
    public javax.swing.JComboBox startTimerCombobox;
    public javax.swing.JButton startTyping;
    public javax.swing.JButton stopTyping;
    public javax.swing.JComboBox strokeTimerComboBox;
    public javax.swing.JTextArea textArea;
    public javax.swing.JLabel version_lable;
    // End of variables declaration//GEN-END:variables
}
